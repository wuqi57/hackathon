{
  "name": "rider-ui",
  "version": "0.1.1",
  "description": "基于 rider 的 UI 样式库，用于快速构建移动应用界面。",
  "maintainers": [
    {
      "name": "Firede",
      "email": "firede@firede.us"
    }
  ],
  "main": "lib/index.js",
  "devDependencies": {
    "edp-provider-rider": "~0.3.3"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ecomfe/rider-ui.git"
  },
  "bugs": {
    "url": "https://github.com/ecomfe/rider-ui/issues"
  },
  "homepage": "https://github.com/ecomfe/rider-ui",
  "readme": "rider-ui\n===\n\n基于 [`rider`](https://github.com/ecomfe/rider) 的 UI 样式库，用于快速构建移动应用界面。\n\n## 安装与配置\n\n在 [`edp`](https://github.com/ecomfe/edp) 中，推荐使用 [`edpx-mobile`](https://github.com/ecomfe/edpx-mobile) 来自动生成包含 `rider-ui` 的项目。\n\n如需 **手动安装**，执行：\n\n    npm install rider-ui --save\n\n在 `stylus` 配置引入 `rider` 之后使用 `rider-ui` 插件：\n\n```javascript\nvar epr = require('edp-provider-rider');\nvar riderUI = require('rider-ui');\n\nfunction stylusConfig(style) {\n    style.use(epr.plugin());\n    style.use(riderUI());\n}\n```\n\n*注：请确保 edp-provider-rider 的版本与 package.json 中的配置相符。*\n\n## 文档\n\n### Hello World\n\n以 `默认主题` 为例，在主样式文件中引入：\n\n```styl\n@require 'rider-ui/default'\n```\n\n之后会生成该主题预定好的样式，包含 *样式初始化* 与 *控件样式*。\n\n在 `html` 中直接写预定样式：\n\n```html\n<nav class=\"ui-bar\" data-ui=\"primary header static\">\n    <a href=\"#\" class=\"ui-btn\" data-ui=\"primary\">返回</a>\n    <h1 data-ui=\"title\">Hello World</h1>\n    <a href=\"#\" class=\"ui-btn\" data-ui=\"primary\">关于</a>\n</nav>\n```\n\n### 结构\n\n`rider-ui` 目录结构如下：\n\n    rider-ui\n        core        // 核心部分，是生成 UI 的 Mixin，不会向页面输出样式\n        default     // 默认主题，通过调用核心部分的 Mixin 生成样式\n\n在真实项目中，推荐采用自定义项目主题的方式开发，`default` 主题即为自定义主题的示例。\n\n### API\n\n当前版本提供了 **按钮**、**按钮组**、**工具栏**、**内容** 四个 UI 组件。\n\n#### 配置与全局方法\n\n```styl\n// UI 状态的前缀\n$-ui-attr ?= 'data-ui'\n// 使用图标字体时，定义的图标前缀\n$-ui-icon-prefix ?= 'icon-'\n```\n\n在引入 rider-ui 之前定义配置可生效，比如：\n\n```\n$-ui-attr = 'data-rider'\n@require 'rider-ui/default'\n\n// 配置后：<a href=\"#\" class=\"ui-btn\" data-rider=\"active\">Hi</a>\n```\n\n##### +ui-set-type($ui-type)\n\n*类型：block mixin*\n\n增加指定类型的按钮样式。\n\n+ $ui-type `{string}` 样式类型\n\n#### 按钮(btn)\n\nclass: `ui-btn`\n\n一个生成按钮样式的示例：\n\n```styl\n// 引入 core\n@require 'rider-ui/core/btn'\n\n// $ui-size 等参数本例中省略，可参考 default 主题\n\n.ui-btn\n    // 默认尺寸与样式\n    ui-btn-base()\n    ui-btn-size($ui-size)\n    ui-btn-style($ui-colors)\n\n    // 定义一个类型为 clear 的样式\n    +ui-btn-set-type('clear')\n        ui-btn-style($ui-colors-clear)\n```\n\n在 html 中这样使用样式：\n\n```html\n<a href=\"#\" class=\"ui-btn\">默认样式</a>\n<a href=\"#\" class=\"ui-btn\" data-ui=\"clear\">Clear样式</a>\n```\n\n##### +ui-btn-set-active()\n\n*类型：block mixin*\n\n增加 `active` 状态样式。\n\n##### +ui-btn-set-disabled()\n\n*类型：block mixin*\n\n增加 `disabled` 状态样式。\n\n##### ui-btn-size($ui-size)\n\n*类型：mixin*\n\n设置按钮尺寸。\n\n+ $ui-size `{object}`\n    + .height `{unit}` 高度\n    + .padding `{unit}` 内边距\n    + .font-size `{unit}` 文字大小\n    + .border-width `{unit}` 边框尺寸\n\n##### ui-btn-icon($ui-size)\n\n*类型：mixin*\n\n设置按钮中的图标尺寸，参数参考 `ui-btn-size()`。\n\n##### ui-btn-style($ui-colors, $ui-active-colors = null)\n\n*类型：mixin*\n\n设置按钮颜色相关样式。\n\n+ $ui-colors `{object}`\n    + .bg `{rgba}` 背景颜色\n    + .border `{rgba}` 边框颜色\n    + .text `{rgba}` 文字颜色\n\n##### ui-btn-base()\n\n*类型：mixin*\n\n设置按钮基础样式。\n\n#### 按钮组(btns)\n\nclass: `ui-btns`\n\n##### ui-btns-base()\n\n*类型：mixin*\n\n设置按钮组基础样式。\n\n#### 工具栏(bar)\n\nclass: `ui-bar`\n\n##### ui-bar-style($ui-colors)\n\n*类型：mixin*\n\n设置工具栏颜色相关样式。\n\n+ $ui-colors `{object}`\n    + .bg `{rgba}` 背景颜色\n    + .border `{rgba}` 边框颜色\n    + .text `{rgba}` 文字颜色\n\n##### ui-bar-base($ui-base, $ui-default-colors, $ui-btn-size)\n\n*类型：mixin*\n\n设置工具栏基础样式。\n\n+ $ui-base `{object}`\n    + .height `{unit}` 高度\n    + .padding `{unit}` 内边距\n    + .font-size `{unit}` 文字大小\n    + .border-width `{unit}` 边框尺寸\n    + .z-index `{unit}` 工具栏的层级\n    + .title-z-index `{unit}` 标题的层级\n    + .btn-z-index `{unit}` 按钮的层级\n+ $ui-default-colors `{object}` 默认颜色方案，参考 `ui-bar-style()` 文档\n+ $ui-btn-size `{object}` 工具栏按钮尺寸，参考 `ui-btn-style()` 文档\n\n#### 内容(content)\n\nclass: `ui-content`\n\n##### ui-content($ui-font-size, $ui-line-height, $ui-heading-ratio)\n\n*类型：mixin*\n\n设置排版样式，行距采用 **垂直的旋律** 排版。\n\n+ $ui-font-size `{unit}` 字体大小\n+ $ui-line-height `{unit}` 行高\n+ $ui-heading-ratio `{array}` 长度为6的数组，值为 `h1` 到 `h6` 字体相对普通文本的倍数\n",
  "readmeFilename": "README.md",
  "_id": "rider-ui@0.1.1",
  "_from": "rider-ui@"
}
